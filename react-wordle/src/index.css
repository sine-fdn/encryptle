@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --animation-speed: 1000ms;
  --animation-speed-fast: 250ms;
  --animation-speed-popup: 20s;
  --move-down-popup-anim: calc(200%);
  --move-up-popup-anim: calc(-200%);
  --default-cell-bg-color: theme('colors.white');
  --default-cell-border-color: theme('colors.black');
  --default-cell-text-color: theme('colors.black');
  --absent-cell-bg-color: theme('colors.slate.400');
  --correct-cell-bg-color: theme('colors.green.200');
  --present-cell-bg-color: theme('colors.yellow.100');
  --fade-out-opacity: 10%;
}

.dark {
  --default-cell-bg-color: theme('colors.neutral.800');
  --default-cell-border-color: theme('colors.white');
  --default-cell-text-color: theme('colors.white');
  --absent-cell-bg-color: theme('colors.neutral.600');
}

.high-contrast {
  --correct-cell-bg-color: theme('colors.orange.400');
  --present-cell-bg-color: theme('colors.cyan.400');
}

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

.cell-reveal {
  animation-duration: 0.35s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}

.cell-reveal.absent {
  animation-name: fade-in, revealAbsentCharCell;
}

.cell-reveal.correct {
  animation-name: fade-in, revealCorrectCharCell;
}

.cell-reveal.present {
  animation-name: fade-in, revealPresentCharCell;
}

.cell-reveal > .letter-container {
  animation: offsetLetterFlip 0.35s linear;
  animation-fill-mode: backwards;
}

svg.cursor-pointer {
  transition: all var(--animation-speed-fast);
}

svg.cursor-pointer:hover {
  transform: scale(1.2);
}

.jiggle {
  animation: jiggle linear;
  animation-duration: var(--animation-speed-fast);
}

.checking {
  transition: opacity var(--animation-speed);
  opacity: var(--fade-out-opacity);
}

.puzzle {
  height: 30%;
  width: 30%;
  border: 1px solid var(--default-cell-border-color);
  border-radius: 50%;
  position: absolute;
  background-color: var(--default-cell-bg-color);
}

.puzzle-out.puzzle-top {
  transform: translate(0%, -205%);
  border-bottom-color: transparent;
}

.puzzle-out.puzzle-bottom {
  transform: translate(0%, 205%);
  border-top-color: transparent;
}

.puzzle-in.puzzle-left {
  transform: translate(-140%, 0%);
  border-left-color: transparent;
}

.puzzle-in.puzzle-right {
  transform: translate(140%, 0%);
  border-right-color: transparent;
}

.anim-cell-client.anim-color-correct .puzzle-out {
  animation-name: popupCellCorrect;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client.anim-color-present .puzzle-out {
  animation-name: popupCellPresent;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client.anim-color-absent .puzzle-out {
  animation-name: popupCellAbsent;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client {
  z-index: 10;
  margin-bottom: 4em;
  position: absolute;
}

.popup.letter-container {
  z-index: 20;
  width: 100%;
}

.anim-cell-client.anim-color-absent.delay0 {
  animation-name: popupMoveDown1, popupCellAbsent1;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client.anim-color-absent.delay0 .puzzle-out {
  animation-name: popupCellAbsent1;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

@keyframes popupMoveDown1 {
  0% {
    transform: translate(0, 0);
  }
  2% {
    transform: translate(0, 0);
  }
  4% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  8% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  24% {
    transform: translate(428%, var(--move-down-popup-anim));
  }
  28% {
    transform: translate(0, 0)
  }
}

@keyframes popupCellAbsent1 {
  4% {
    background-color: var(--default-cell-bg-color);
  }
  8% {
    background-color: var(--absent-cell-bg-color);
  }
  96% {
    background-color: var(--absent-cell-bg-color);
  }
}

.anim-cell-client.anim-color-correct.delay1 {
  animation-name: popupMoveDown2, popupCellCorrect2;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client.anim-color-correct.delay1 .puzzle-out {
  animation-name: popupCellCorrect2;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

@keyframes popupMoveDown2 {
  28% {
    transform: translate(0, 0);
  }
  32% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  36% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  40% {
    transform: translate(0, 0)
  }
}

@keyframes popupCellCorrect2 {
  32% {
    background-color: var(--default-cell-bg-color);
  }
  36% {
    background-color: var(--correct-cell-bg-color);
  }
  96% {
    background-color: var(--correct-cell-bg-color);
  }
}

.anim-cell-client.anim-color-correct.delay2 {
  animation-name: popupMoveDown3, popupCellCorrect3;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

.anim-cell-client.anim-color-correct.delay2 .puzzle-out {
  animation-name: popupCellCorrect3;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

@keyframes popupMoveDown3 {
  40% {
    transform: translate(0, 0);
  }
  44% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  48% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  52% {
    transform: translate(0, 0)
  }
}

@keyframes popupCellCorrect3 {
  44% {
    background-color: var(--default-cell-bg-color);
  }
  48% {
    background-color: var(--correct-cell-bg-color);
  }
  96% {
    background-color: var(--correct-cell-bg-color);
  }
}

.anim-cell-client.anim-color-present.delay3 {
  animation-name: popupMoveDown4, popupCellPresent4;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
  animation-delay: 9s;
}

.anim-cell-client.anim-color-present.delay3 .puzzle-out {
  animation-name: popupCellPresent4;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

@keyframes popupMoveDown4 {
  52% {
    transform: translate(0, 0);
  }
  56% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  58% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  62% {
    transform: translate(108%, var(--move-down-popup-anim));
  }
  64% {
    transform: translate(108%, var(--move-down-popup-anim));
  }
  68% {
    transform: translate(0, 0)
  }
}

@keyframes popupCellPresent4 {
  56% {
    background-color: var(--default-cell-bg-color);
  }
  58% {
    background-color: var(--absent-cell-bg-color);
  }
  62% {
    background-color: var(--absent-cell-bg-color);
  }
  64% {
    background-color: var(--present-cell-bg-color);
  }
  96% {
    background-color: var(--present-cell-bg-color);
  }
}

.anim-cell-client.anim-color-absent.delay4 {
  animation-name: popupMoveDown5, popupCellAbsent5;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
  animation-delay: 12s;
}

.anim-cell-client.anim-color-absent.delay4 .puzzle-out {
  animation-name: popupCellAbsent5;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
}

@keyframes popupMoveDown5 {
  68% {
    transform: translate(0, 0);
  }
  72% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  76% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  92% {
    transform: translate(-428%, var(--move-down-popup-anim));
  }
  96% {
    transform: translate(0, 0)
  }
}

@keyframes popupCellAbsent5 {
  72% {
    background-color: var(--default-cell-bg-color);
  }
  76% {
    background-color: var(--absent-cell-bg-color);
  }
  96% {
    background-color: var(--absent-cell-bg-color);
  }
}

.anim-cell-server {
  animation-name: popupMoveUpServer;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
  position: absolute;
}

.anim-cell-server .letter-container {
  animation-name: popupMoveDownServer;
  animation-duration: var(--animation-speed-popup);
  animation-iteration-count: infinite;
  background-color: #00000000 !important;
}

@keyframes popupMoveDownServer {
  0% {
    transform: translate(0, 0);
  }
  2% {
    transform: translate(0, 0);
  }
  4% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  94% {
    transform: translate(0, var(--move-down-popup-anim));
  }
  98% {
    transform: translate(0, 0);
  }
}

@keyframes popupMoveUpServer {
  0% {
    transform: translate(0, 0);
  }
  2% {
    transform: translate(0, 0);
  }
  4% {
    transform: translate(0, var(--move-up-popup-anim));
  }
  94% {
    transform: translate(0, var(--move-up-popup-anim));
  }
  98% {
    transform: translate(0, 0);
  }
}

.navbar {
  margin-bottom: 2%;
}

.navbar-content {
  display: flex;
  height: fit-content;
  align-items: center;
  justify-content: space-between;
}

.right-icons {
  display: flex;
}

@keyframes revealAbsentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--absent-cell-bg-color);
    border-color: var(--absent-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealPresentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--present-cell-bg-color);
    border-color: var(--present-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.1);
  }

  100% {
    transform: scale(1);
  }
}

@keyframes fade-in {
 0% {
    opacity: var(--fade-out-opacity)
 }
 20% {
    opacity: 100%
 }
 100% {
    opacity: 100%
 }
}

.shadowed {
  text-shadow: 1px 1px 1px #000000;
}

@keyframes jiggle {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-0.5rem, 0);
  }
  50% {
    transform: translate(0.5rem, 0);
  }
  75% {
    transform: translate(-0.5rem, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Date picker */

.react-datepicker {
  @apply h-72;
}

.react-datepicker__input-container input {
  @apply form-input block w-full rounded border border-gray-300 bg-white text-base shadow-sm md:text-sm;
}

.react-datepicker-popper {
  @apply z-40 w-72 rounded border-2 border-gray-200 bg-white px-3 py-2 text-sm shadow;
}

.react-datepicker-left {
  @apply absolute left-0 right-auto top-11 transform-none !important;
}

.react-datepicker-right {
  @apply absolute right-0 left-auto top-11 transform-none !important;
}

.react-datepicker__portal {
  @apply absolute top-12 right-0 z-10 w-72 transform-none rounded border-2 border-gray-200 bg-white px-3 py-2 text-sm shadow;
}

.react-datepicker__month-container {
  @apply flex flex-col;
}

.react-datepicker__month {
  @apply flex flex-col;
}

.react-datepicker__current-month {
  @apply ml-2.5 text-lg font-semibold text-gray-800 dark:text-gray-100;
}

.react-datepicker__week {
  @apply flex justify-around;
}

.react-datepicker__day-names {
  @apply flex justify-around text-center text-xs font-medium text-gray-400 dark:text-gray-500;
}

.react-datepicker__day-name {
  @apply flex h-8 w-8 items-center justify-center rounded-full py-1;
}

.react-datepicker__navigation {
  @apply absolute top-2;
}

.react-datepicker__navigation--previous {
  @apply right-12 flex h-8 w-8 items-center justify-center rounded transition hover:bg-gray-200;
}

.react-datepicker__navigation--next {
  @apply right-4 flex h-8 w-8 items-center justify-center rounded transition hover:bg-gray-200;
}

.react-datepicker__day {
  @apply mb-1 flex h-8 w-8 cursor-pointer items-center justify-center rounded py-1 text-sm leading-loose text-gray-700 transition dark:text-gray-200;
}

.react-datepicker__day--disabled {
  @apply cursor-not-allowed opacity-40 hover:bg-transparent;
}

.react-datepicker__day--outside-month {
  @apply text-gray-300 dark:text-gray-600;
}

.react-datepicker__day--in-range {
  @apply bg-gray-200;
}

.react-datepicker__day--in-selecting-range {
  @apply bg-indigo-200;
}

.react-datepicker__day--selecting-range-start {
  @apply border-2 border-indigo-600 bg-white;
}

.react-datepicker__day--selecting-range-end {
  @apply border-2 border-indigo-600 bg-white;
}

.react-datepicker__day--selected {
  @apply bg-indigo-600 text-white dark:text-white;
}

.react-datepicker__day--range-start {
  @apply bg-indigo-600 text-white hover:bg-white hover:text-gray-700;
}

.react-datepicker__day--range-end {
  @apply bg-indigo-600 text-white hover:bg-white hover:text-gray-700;
}
